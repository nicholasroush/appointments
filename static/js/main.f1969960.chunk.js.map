{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","name","onChange","contacts","value","selected","map","contact","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","e","target","required","placeholder","vaue","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tile","className","Object","values","index","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","length","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","undefined","find","App","saved","localStorage","getItem","JSON","parse","setContacts","setAppointments","ROUTES","setItem","stringify","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1969960.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({name, onChange, contacts}) => {\r\n  return (\r\n    <select name={name} onChange={onChange}>\r\n      <option value={''} key={-1} selected='selected'>\r\n        No Contact Selected\r\n      </option>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <option value={contact} key={contact}>\r\n            {contact}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const getContactName = () => {\r\n    return contacts.map((contact) => contact.name);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          placeholder='Appointment Title' \r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <ContactPicker \r\n          name='contact'\r\n          value={contact}\r\n          contacts={getContactName()}\r\n          onChange={(e) => setContact(e.target.vaue)}\r\n          placeholder='Appointment Contact' \r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type='date'\r\n          name='date'\r\n          min={getTodayString()}\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type='time'\r\n          name='time'\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n          required \r\n        />\r\n      </label>\r\n      <br />\r\n      <input type='submit' value='Add Appointment' />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({tile}) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {Object.values(tile).map((value, index) => (\r\n        <p key={index} className={`${index === 0 ? 'tile-title' : ''} tile`}>\r\n          {value}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({tiles}) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((tile, index) => (\r\n        <Tile key={index} tile={tile} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({appointments, addAppointment, contacts}) => {\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState(contacts.length > 0 ? contacts[0].name : '');\r\n  const [date, setDate] =  useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAppointment(title, contact, date, time);\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm \r\n          contacts={contacts}\r\n          title={title}\r\n          setTitle={setTitle}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type='text' \r\n          name='name' \r\n          value={name} \r\n          onChange={e => setName(e.target.value)} \r\n          required \r\n          placeholder='Contact Name' \r\n        />\r\n        <input \r\n          type='tel' \r\n          name='phone'\r\n          pattern='((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}' \r\n          value={phone} \r\n          onChange={(e) => setPhone(e.target.value)}\r\n          required\r\n          placeholder='Phone Number' \r\n          />\r\n        <input \r\n          type='email'\r\n          name='email'\r\n          value={email} \r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder='Email Address'\r\n        />\r\n        <input type='submit' value='Add Contact' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(!duplicate) {\r\n      addContact(name, phone, email);\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const nameIsDuplicate = () => {\r\n      const found = contacts.find((contact) => contact.name === name);\r\n      if(found !== undefined) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if(nameIsDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [name, contacts, duplicate]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact {duplicate ? '* Name Already Exists' : ''}</h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    const saved = localStorage.getItem('contacts');\r\n    const initialValue = JSON.parse(saved);\r\n    return initialValue || [];\r\n  });\r\n  const [appointments, setAppointments] = useState(() => {\r\n    const saved = localStorage.getItem('appointments');\r\n    const initialValue = JSON.parse(saved);\r\n    return initialValue || [];\r\n  });\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n const addContact = (name, phone, email) => {\r\n   setContacts([\r\n      ...contacts,\r\n      {\r\n        name: name,\r\n        phone: phone,\r\n        email: email\r\n      }\r\n   ]);\r\n };\r\n\r\n const addAppointment = (title, contact, date, time) => {\r\n   setAppointments([\r\n      ...appointments,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time\r\n      }\r\n   ]);\r\n };\r\n\r\n useEffect(() => {\r\n  localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  localStorage.setItem('appointments', JSON.stringify(appointments));\r\n}, [contacts, appointments]);\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage appointments={appointments} addAppointment={addAppointment} contacts={contacts} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}